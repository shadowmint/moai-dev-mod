# Copyright 2012 Douglas Linder
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmake_minimum_required (VERSION 2.8)
project(expat)

# Import macros
file(GLOB PROJECT_MACROS "${PROJECT_SOURCE_DIR}/../../cmake/*.cmake")
foreach(ITEM ${PROJECT_MACROS})
  include(${ITEM})
endforeach()

# Config
set(PROJECT_KEY "freetype-2.4.4")

# Copy to build directory
set(PROJECT_SRC_PATH "${PROJECT_SOURCE_DIR}/../../../../3rdparty/${PROJECT_KEY}")
set(PROJECT_REAL_PATH "${PROJECT_BINARY_DIR}/${PROJECT_KEY}")

# Source and includes
get_filename_component(PROJECT_REAL_PATH ${PROJECT_REAL_PATH} ABSOLUTE)
if (${DEBUG_MESSAGES})
  message("Importing ${PROJECT_KEY} from ${PROJECT_REAL_PATH}")
endif()

# Dependency target; skip build if it already magically exists
set(PROJECT_LIB_TARGET "${PROJECT_REAL_PATH}/objs/.libs/libfreetype.a")
if (NOT EXISTS ${PROJECT_LIB_TARGET})

  # Take a copy to build with
  file(COPY ${PROJECT_SRC_PATH} DESTINATION ${PROJECT_BINARY_DIR})

  # Platform config
  import_common_build_flags(BUILD_EXTRA_FLAGS)

  # <CR> must be removed
  apply_cr_fix("${PROJECT_REAL_PATH}")

  # Window doesn't play well with others
  if (WIN32)
    set(BUILD_EXTRA_FLAGS "CFLAGS=\"-std=gnu99\" --without-zlib --enable-shared=no ${BUILD_EXTRA_FLAGS}")
  endif()

  # freetype requires configure update and extra folder in mingw
  execute_process(COMMAND sh autogen.sh WORKING_DIRECTORY ${PROJECT_REAL_PATH})
  file(MAKE_DIRECTORY "${PROJECT_REAL_PATH}/objs/.libs")

  # Build
  invoke_autotools("${PROJECT_REAL_PATH}" "${BUILD_EXTRA_FLAGS}")

endif()

# Error if the build using autotools failed
if (NOT EXISTS ${PROJECT_LIB_TARGET})
 message(FATAL_ERROR "Autotools fail! Unable to find target: ${PROJECT_LIB_TARGET}")
endif()

# Lib and includes
set(PROJECT_INCLUDE_DIRS "${PROJECT_REAL_PATH}/include")
set(PROJECT_LIBRARIES "${PROJECT_LIB_TARGET}")
set(PROJECT_NAME "FREETYPE")

# Export libraries
CONFIGURE_FILE(freetypeConfig.cmake.in "${PROJECT_BINARY_DIR}/freetypeConfig.cmake")
